package me.gamrboy4life.paradox.module.run;

import me.gamrboy4life.paradox.module.Category;
import me.gamrboy4life.paradox.module.Module;

public class C extends Module{
	
	//1回だけ実行するためのフラグ
	private boolean hasRunProcess=false;

	public C() {
		super("C",0,Category.RUN);
	}
	
   
	 @Override
	    public void onUpdate() {
	        // モジュールがトグルされており、処理がまだ実行されていない場合
	        if (isToggled() && !hasRunProcess) {
	            // 別スレッドで重い計算処理を実行
	            Thread heavyProcessThread = new Thread(new Runnable() {
	                @Override
	                public void run() {
	                    for (int i = 0; i < 1000; i++) {
	                        for (int j = 0; j < 1000; j++) {
	                            double result = Math.pow(i, j);
	                        }
	                    }
	                    System.out.println("Heavy process completed");

	                    // 処理が完了した後、フラグをtrueに設定
	                    hasRunProcess = true;

	                    // モジュールのトグルを解除
	                    toggled = false;
	                }
	            });

	            // スレッドの優先度を最小に設定
	            heavyProcessThread.setPriority(Thread.MIN_PRIORITY);
	            heavyProcessThread.start();
	        }
	    }
	 
	@Override
	public void onEnable() {
		super.onEnable();
		//モジュールが有効化されたらリセット
		hasRunProcess=false;
	}
	
	@Override
	public void onDisable() {
		super.onDisable();
		hasRunProcess=false;	
	}


}
