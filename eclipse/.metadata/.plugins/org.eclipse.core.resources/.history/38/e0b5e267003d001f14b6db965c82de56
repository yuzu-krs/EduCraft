package me.gamrboy4life.paradox.module.run;
import org.lwjgl.input.Keyboard;

import me.gamrboy4life.paradox.module.Category;
import me.gamrboy4life.paradox.module.Module;

public class C extends Module {
	
	 private boolean hasRunProcess = false;
    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

    public C() {
        super("C", Keyboard.KEY_R, Category.RUN);
    }

    
    @Override
    public void onUpdate() {
        if (isToggled() && !hasRunProcess) {
            // 3秒後に処理を実行
            scheduler.schedule(() -> {
                // 重い処理をここに記述
                heavyProcess();
                
                // 処理が完了した後、フラグをtrueに設定
                hasRunProcess = true;

                // モジュールのトグルを解除
                toggled = false;
            }, 3, TimeUnit.SECONDS);
        }
    }

    private void heavyProcess() {
        // 重い計算処理の例
        for (int i = 0; i < 1000; i++) {
            for (int j = 0; j < 1000; j++) {
                double result = Math.pow(i, j);
            }
        }
        System.out.println("Heavy process completed");
    }

    @Override
    public void onEnable() {
        super.onEnable();
        hasRunProcess = false;
    }

    @Override
    public void onDisable() {
        super.onDisable();
        hasRunProcess = false;
    }
}
}