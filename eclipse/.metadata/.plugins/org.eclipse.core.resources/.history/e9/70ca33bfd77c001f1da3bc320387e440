package me.gamrboy4life.paradox.module.status;

import java.util.List;

import org.lwjgl.input.Keyboard;

import me.gamrboy4life.paradox.Sotuken;
import me.gamrboy4life.paradox.module.Category;
import me.gamrboy4life.paradox.module.Module;
import me.gamrboy4life.paradox.utils.Wrapper;
import net.minecraft.client.gui.Gui;

public class TabGui extends Module{
    
    public int currentTab;
    public boolean expanded;

    public TabGui() {
        super("TabGui",0,Category.STATUS);
        toggled = true;
    }
    
    public void draw() {
        if(this.isToggled()) {
            // ベースパネルの背景、角を丸くしてふわっとした見た目に
            Gui.drawRoundedRect(5, 20, 68, 102, 10, 0x50000000); // 半透明の黒
            Gui.drawRoundedRect(8, 23 + currentTab * 13, 65, 34 + currentTab * 13, 10, 0xFF8FBC8F); // 柔らかいグリーン
            
            int count = 0;

            for (Category c : Category.values()) {
                Wrapper.fr.drawStringWithShadow(c.name, 12, 27 + count * 13, 0xFFFAFAFA); // 白文字で陰影つける
                count++;
            }
            
            if(expanded) {
                Category category = Category.values()[currentTab];
                List<Module> modules = Sotuken.instance.moduleManager.getModulesbyCategory(category);
                
                if (modules.size() == 0) {
                    return;
                }

                int maxLenModule = 0;
                for (Module module : modules) {
                    if (Wrapper.fr.getStringWidth(module.name) > maxLenModule) 
                        maxLenModule = Wrapper.fr.getStringWidth(module.name);
                }

                // サブメニューの背景
                Gui.drawRoundedRect(70, 20, 70 + maxLenModule + 30, 25 + modules.size() * 13, 10, 0x50000000);
                Gui.drawRoundedRect(72, 23 + category.moduleIndex * 13, 68 + maxLenModule + 12, 34 + category.moduleIndex * 13, 10, 0xFF8FBC8F); // サブ選択中

                count = 0;
                for (Module m : modules) {
                    Wrapper.fr.drawStringWithShadow(m.name, 75, 27 + count * 13, 0xFFFAFAFA); // サブアイテムもふわっと浮き上がるように
                    count++;
                }
            }
        }
    }

    public void keyPressed(int k) {
        Category category = Category.values()[currentTab];
        List<Module> modules = Sotuken.instance.moduleManager.getModulesbyCategory(category);
        switch (k) {
            case Keyboard.KEY_UP:
                if (expanded) {
                    if (category.moduleIndex <= 0) {
                        category.moduleIndex = modules.size() - 1;
                    } else {
                        category.moduleIndex--;
                    }
                } else {
                    if (currentTab <= 0) {
                        currentTab = Category.values().length - 1;
                    } else {
                        currentTab--;
                    }
                }
                break;

            case Keyboard.KEY_DOWN:
                if (expanded) {
                    if (category.moduleIndex >= modules.size() - 1) {
                        category.moduleIndex = 0;
                    } else {
                        category.moduleIndex++;
                    }
                } else {
                    if (currentTab >= Category.values().length - 1) {
                        currentTab = 0;
                    } else {
                        currentTab++;
                    }
                }
                break;

            case Keyboard.KEY_RIGHT:
                if (expanded && modules.size() != 0) {
                    Module module = modules.get(category.moduleIndex);
                    if (!module.name.equals("TabGui"))
                        module.toggle();
                } else {
                    if (modules.size() != 0) {
                        expanded = true;
                        category.moduleIndex = 0;
                    }
                }
                break;

            case Keyboard.KEY_LEFT:
                expanded = false;
                break;
        }
    }
}