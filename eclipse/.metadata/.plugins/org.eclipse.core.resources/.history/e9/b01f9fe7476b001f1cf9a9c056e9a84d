package me.gamrboy4life.paradox.analysis;
import me.gamrboy4life.paradox.Sotuken;
import net.minecraft.client.Minecraft;
import net.minecraft.network.play.client.C01PacketChatMessage;

public class DataParser {
	
	public void parseData(String data) {
		
		if(isSetBlockReplace(data)) {
			executeSetBlockReplace(data);
			
		}else if(isSetBlockKeep(data)) {
			executeSetBlockKeep(data);
			
		}else if(isFillBlock(data)) {
			executeFillBlock(data);
		
		}else {
			Sotuken.instance.moduleManager.addRunChatMessage(data.toString());
		}
	
	}
	

	//関数を判定
	
	private boolean isSetBlockReplace(String line) {
		return line.startsWith("999999999,");
	}
	
	private boolean isSetBlockKeep(String line) {
		return line.startsWith("999999998,");
	}
	
	private boolean isSetBlockDestroy(String line) {
		return line.startsWith("999999997,");
	}
	
	
	
	//関数を実行
	private void executeSetBlockReplace(String line) {
		try {
			//lineをカンマで分割
			String[] parts=line.split(",");
			//6パーツあるか
			if(parts.length==6) {
				int x=Integer.parseInt(parts[1]);
				int y=Integer.parseInt(parts[2]);
				int z=Integer.parseInt(parts[3]);
				String blockName=parts[4];
				int blockInfo=Integer.parseInt(parts[5]);
				
				//setblockコマンドをマイクラのチャットに送信
				Minecraft.getMinecraft().thePlayer.sendQueue.addToSendQueue(
                    new C01PacketChatMessage(
                    		String.format("/setblock %d %d %d %s %d replace",x,y,z,blockName,blockInfo)
                    )
				);
			}else {
				Sotuken.instance.moduleManager.addRunChatMessage("エラー:setblockコマンドの形式: "+line);
			}
		}catch (NumberFormatException e) {
			Sotuken.instance.moduleManager.addRunChatMessage("エラー:setblockコマンド解析: "+e.getMessage());
		}
	}
	
	private void executeSetBlockKeep(String line) {
		try {
			//lineをカンマで分割
			String[] parts=line.split(",");
			//6パーツあるか
			if(parts.length==6) {
				int x=Integer.parseInt(parts[1]);
				int y=Integer.parseInt(parts[2]);
				int z=Integer.parseInt(parts[3]);
				String blockName=parts[4];
				int blockInfo=Integer.parseInt(parts[5]);
				
				//setblockコマンドをマイクラのチャットに送信
				Minecraft.getMinecraft().thePlayer.sendQueue.addToSendQueue(
                    new C01PacketChatMessage(
                    		String.format("/setblock %d %d %d %s %d keep",x,y,z,blockName,blockInfo)
                    )
				);
			}else {
				Sotuken.instance.moduleManager.addRunChatMessage("エラー:setblockコマンドの形式: "+line);
			}
		}catch (NumberFormatException e) {
			Sotuken.instance.moduleManager.addRunChatMessage("エラー:setblockコマンド解析: "+e.getMessage());
		}
	}
	
	
	
	
	
	//fillblock関数を判定
	private boolean isFillBlock(String line) {
		//行が-99999で始まっているかチェック
		return line.startsWith("-99999,");
	}
	
	//fillblock関数を実行
	private void executeFillBlock(String line) {
		try {
	        // lineをカンマで分割
	        String[] parts = line.split(",");
	        // 9パーツあるか
	        if (parts.length == 9) {
	            int x1 = Integer.parseInt(parts[1]);
	            int y1 = Integer.parseInt(parts[2]);
	            int z1 = Integer.parseInt(parts[3]);
	            int x2 = Integer.parseInt(parts[4]);
	            int y2 = Integer.parseInt(parts[5]);
	            int z2 = Integer.parseInt(parts[6]);
	            String blockName = parts[7];
	            int blockInfo = Integer.parseInt(parts[8]);

	            // fillコマンドをマイクラのチャットに送信
	            Minecraft.getMinecraft().thePlayer.sendQueue.addToSendQueue(
	                new C01PacketChatMessage(
	                        String.format("/fill %d %d %d %d %d %d %s %d", 
	                        x1, y1, z1, x2, y2, z2, blockName, blockInfo)
	                )
	            );
	        } else {
	            Sotuken.instance.moduleManager.addRunChatMessage("エラー:fillblockコマンドの形式: " + line);
	        }
	    } catch (NumberFormatException e) {
	        Sotuken.instance.moduleManager.addRunChatMessage("エラー:fillblockコマンド解析: " + e.getMessage());
	    }
	}
}